{"version":3,"sources":["redux/contacts/contacts-action.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["fetchRequest","createAction","fetchSuccess","fetchError","addRequest","addSuccess","addError","deleteRequest","deleteSuccess","deleteError","filterContacts","axios","defaults","baseURL","getAllContacts","state","contacts","items","getFilterContacts","createSelector","filter","normalizedFilter","toLowerCase","item","name","includes","Form","styled","form","Button","button","Span","span","Label","label","ContactForm","dispatch","useDispatch","useSelector","contactsSelectors","useState","setName","number","setNumber","console","log","onSubmit","e","payload","preventDefault","some","contact","alert","post","then","data","catch","error","type","value","pattern","title","required","onChange","target","Li","li","ContactItem","id","find","onClick","delete","deleteContact","Ul","ul","ContactList","map","Filter","connect","useEffect","get","className","itemsReducer","createReducer","_","filterReducer","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.424bedf3.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchRequest = createAction('contact/FetchRequest');\nexport const fetchSuccess = createAction('contact/FetchSuccess');\nexport const fetchError = createAction('contact/FetchError');\n\nexport const addRequest = createAction('contact/AddRequest');\nexport const addSuccess = createAction('contact/AddSuccess');\nexport const addError = createAction('contact/AddError');\n\nexport const deleteRequest = createAction('contact/DeleteRequest');\nexport const deleteSuccess = createAction('contact/DeleteSuccess');\nexport const deleteError = createAction('contact/DeleteError');\n\nexport const filterContacts = createAction('contact/Filter');\n\n//Pure Redux\n// export const addContact = (name, number) => ({\n//   type: actionTypes.ADD,\n//   payload: { id: uuidv4(), name, number },\n// });\n\n// export const deleteContact = id => ({\n//   type: actionTypes.DELETE,\n//   payload: id,\n// });\n\n// export const filterContacts = value => ({\n//   type: actionTypes.FILTER,\n//   payload: value,\n// });\n","import axios from 'axios';\nimport {\n  addRequest,\n  addSuccess,\n  addError,\n  deleteRequest,\n  deleteSuccess,\n  deleteError,\n  fetchRequest,\n  fetchSuccess,\n  fetchError,\n} from './contacts-action';\n\naxios.defaults.baseURL = 'http://localhost:3004';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchSuccess(data)))\n    .catch(error => dispatch(fetchError(error)));\n};\n\nexport const addContact = payload => dispatch => {\n  // const contact = { ...payload };\n  console.log(payload);\n  dispatch(addRequest());\n\n  axios\n    .post('/contacts', payload)\n    .then(({ data }) => dispatch(addSuccess(data)))\n    .catch(error => dispatch(addError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteSuccess(id)))\n    .catch(error => dispatch(deleteError(error)));\n};\n","import { createSelector } from 'reselect';\n\nexport const getAllContacts = state => state.contacts.items;\n\nexport const getContactById = id =>\n  createSelector([getAllContacts], items =>\n    items.find(contact => contact.id === id),\n  );\n\nconst getFilter = state => state.contacts.filter;\n\nexport const getFilterContacts = createSelector(\n  [getAllContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(item =>\n      item.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport * as contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 6px;\n  border: 2px solid green;\n  color: green;\n  width: 200px;\n  margin-left: 1em;\n  padding: 0.25em 1em;\n  &:hover {\n    background: LemonChiffon;\n  }\n`;\nconst Span = styled.span`\n  margin-right: 10px;\n  display: inline-block;\n`;\n\nconst Label = styled.label`\n  margin-bottom: 15px;\n`;\n\n// const getContacts = state => state.contacts.items;\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getAllContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  console.log(contacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const unavailableName = contacts.some(contact => contact.name === name);\n    if (unavailableName) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  const handleChangeName = e => setName(e.target.value);\n  const handleChangeNumber = e => setNumber(e.target.value);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <Span>Name</Span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChangeName}\n        />\n      </Label>\n      <Label>\n        <Span>Number</Span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          onChange={handleChangeNumber}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\nimport * as contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 6px;\n  border: 2px solid red;\n  color: red;\n  width: 80px;\n  margin-left: 1em;\n  padding: 0.25em 1em;\n  &:hover {\n    background: LemonChiffon;\n  }\n`;\n\nconst Li = styled.li`\n  margin-bottom: 10px;\n`;\n\n// const getContactsById = id => state =>\n//   state.contacts.items.find(contact => contact.id === id);\n\nconst ContactItem = ({ id }) => {\n  const { name, number } = useSelector(contactsSelectors.getContactById(id));\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <Li>\n      {name}: {number}\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </Li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nexport default ContactItem;\n","import ContactItem from './ContactItem';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport * as contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst Ul = styled.ul`\n  list-style: none;\n  padding-left: 5px;\n`;\n\nconst ContactList = () => {\n  const contacts = useSelector(contactsSelectors.getFilterContacts);\n  return (\n    <Ul>\n      {contacts.map(({ id }) => (\n        <ContactItem key={id} id={id} />\n      ))}\n    </Ul>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/contacts-action';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleChangeFilter = e => dispatch(filterContacts(e.target.value));\n\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input type=\"text\" onChange={handleChangeFilter} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport { fetchContacts } from './redux/contacts/contacts-operations';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default connect()(App);\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  addRequest,\n  addSuccess,\n  addError,\n  deleteRequest,\n  deleteSuccess,\n  deleteError,\n  filterContacts,\n  fetchRequest,\n  fetchSuccess,\n  fetchError,\n} from './contacts-action';\n\nconst itemsReducer = createReducer([], {\n  [fetchSuccess]: (_, { payload }) => payload,\n  [addSuccess]: (state, { payload }) => [...state, payload],\n  [deleteSuccess]: (state, { payload }) =>\n    state.filter(item => item.id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addRequest]: () => true,\n  [addSuccess]: () => false,\n  [addError]: () => false,\n  [deleteRequest]: () => true,\n  [deleteSuccess]: () => false,\n  [deleteError]: () => false,\n  [fetchRequest]: () => true,\n  [fetchSuccess]: () => false,\n  [fetchError]: () => false,\n});\n// const itemsReducer = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.ADD:\n//       return [...state, payload];\n//     case actionTypes.DELETE:\n//       return state.filter(item => item.id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\n// const filterReducer = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.FILTER:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading,\n});\n","import {\n  combineReducers,\n  configureStore,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n// import { combineReducers, createStore } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\n// const persistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\n//Pure Redux\n// const rootReducer = combineReducers({\n//     contacts: contactsReducer,\n//   });\n// const store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}